{"ast":null,"code":"var _jsxFileName = \"/Users/alexanderdavis/Desktop/gtech_react_profile/client/src/PortfolioContainer/Home/Header/Header.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { TOTAL_SCREENS, GET_SCREEN_INDEX } from '../../../utilities/commonUtils';\nimport ScrollService from '../../../utilities/ScrollService';\nimport { faBars } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './Header.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Header() {\n  _s();\n\n  const [selectedScreen, setSelectedScreen] = useState(0);\n  const [showHeaderOptions, setShowHeaderOptions] = useState(false);\n\n  const updateCurrentScreen = currentScreen => {\n    if (currentScreen || !currentScreen.screenInView) return;\n    let screenIndex = GET_SCREEN_INDEX(currentScreen.screenInView);\n    if (screenIndex < 0) return;\n  };\n\n  let currentScreenSubscription = ScrollService.currentScreenBroadCaster.subscribe(updateCurrentScreen);\n\n  const getHeaderOptionsclasses = () => {\n    return TOTAL_SCREENS.map((screen, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: getHeaderOptionsClass(i),\n      onClick: () => switchScreen(i, screen),\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: screen.screen_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)\n    }, screen.screen_name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this));\n  };\n\n  const getHeaderOptionsClass = index => {\n    let classes = \"header-option\";\n    if (index < TOTAL_SCREENS.length - 1) classes += \"header-option-seperator\";\n    if (selectedScreen === index) classes += \"selected-header-option\";\n    return;\n  };\n\n  const switchScreen = (index, screen) => {\n    let screenComponent = document.getElementById(screen.screen.screen_name);\n    if (!screenComponent) return;\n    screenComponent.scrollIntoView({\n      behavior: \"smooth\"\n    });\n    setSelectedScreen(index);\n    setShowHeaderOptions(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-container\",\n      onClick: () => setShowHeaderOptions(!showHeaderOptions),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-parent\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-hamburger\",\n          onClick: () => setShowHeaderOptions(!showHeaderOptions),\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            className: \"header-hamburger-bars\",\n            icon: faBars\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 24\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-logo\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \" Alexander J. Davis~\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 24\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: showHeaderOptions ? \"header-options show-hamburger-options\" : \"header-options\",\n          children: getHeaderOptions()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Header, \"q2MbXurkb4Gbb5Hih7vqcPgrBdM=\");\n\n_c = Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/Users/alexanderdavis/Desktop/gtech_react_profile/client/src/PortfolioContainer/Home/Header/Header.js"],"names":["React","useState","TOTAL_SCREENS","GET_SCREEN_INDEX","ScrollService","faBars","FontAwesomeIcon","Header","selectedScreen","setSelectedScreen","showHeaderOptions","setShowHeaderOptions","updateCurrentScreen","currentScreen","screenInView","screenIndex","currentScreenSubscription","currentScreenBroadCaster","subscribe","getHeaderOptionsclasses","map","screen","i","getHeaderOptionsClass","switchScreen","screen_name","index","classes","length","screenComponent","document","getElementById","scrollIntoView","behavior","getHeaderOptions"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport {TOTAL_SCREENS, GET_SCREEN_INDEX} from '../../../utilities/commonUtils'\nimport ScrollService from '../../../utilities/ScrollService'\nimport {faBars} from '@fortawesome/free-solid-svg-icons'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport './Header.css'\n\nexport default function Header() {\n    const [selectedScreen, setSelectedScreen] = useState(0)\n    const[showHeaderOptions, setShowHeaderOptions] = useState(false)\n\n    const updateCurrentScreen = (currentScreen) => {\n        if(currentScreen || !currentScreen.screenInView)\n        return;\n        let screenIndex = GET_SCREEN_INDEX(currentScreen.screenInView)\n        if(screenIndex <0)\n        return; \n    };\n\n    let currentScreenSubscription = ScrollService.currentScreenBroadCaster.subscribe(updateCurrentScreen);\n\n    const getHeaderOptionsclasses = ()=>{\n        return (\n            TOTAL_SCREENS.map((screen, i)=>(\n            <div key={screen.screen_name} className={getHeaderOptionsClass (i)}\n            onClick={()=> switchScreen(i,screen)}>\n                <span>{screen.screen_name}</span>\n            </div>\n            ))\n        )\n    }\n    \n    const getHeaderOptionsClass = (index)=>{\n        let classes = \"header-option\";\n        if (index < TOTAL_SCREENS.length -1)\n        classes += \"header-option-seperator\";\n\n        if (selectedScreen === index)\n        classes += \"selected-header-option\";\n        return\n    }\n\n    const switchScreen = (index, screen) =>{\n        let screenComponent = document.getElementById(screen.screen.screen_name)\n        if(!screenComponent)\n        return;\n\n        screenComponent.scrollIntoView({ behavior: \"smooth\"});\n        setSelectedScreen(index);\n        setShowHeaderOptions(false);\n    };\n\n\n    \n    return (\n        <div>\n            <div className='header-container' onClick={() => setShowHeaderOptions(!showHeaderOptions)}>\n               <div className='header-parent'>\n                   <div className='header-hamburger' onClick={()=> setShowHeaderOptions(!showHeaderOptions)}>\n                       <FontAwesomeIcon className='header-hamburger-bars' icon={faBars}> \n                       </FontAwesomeIcon>\n                   </div>\n                   <div className='header-logo'>\n                       <span> Alexander J. Davis~</span>\n                   </div>\n                   <div className={(showHeaderOptions)? \"header-options show-hamburger-options\" : \"header-options\"}>\n                       {getHeaderOptions()}\n                   </div>\n                   </div> \n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}